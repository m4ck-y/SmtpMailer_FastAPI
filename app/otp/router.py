from fastapi import APIRouter, HTTPException, status
from app.otp.controller import EmailOTPApplication


controller = EmailOTPApplication()



MODULE_NAME = "email"

router_otp = APIRouter(
    prefix=f"/{MODULE_NAME}",
    tags=[MODULE_NAME])

TAG_OTP = {
    "name": MODULE_NAME,
    "description": """
- üîê **C√≥digos OTP** - Env√≠o de c√≥digos de verificaci√≥n seguros
- üéØ **Funcionalidades:** Generaci√≥n y env√≠o de c√≥digos temporales para 2FA
- üöÄ **Casos de uso:** Registro, login seguro, recuperaci√≥n de cuenta  
- üìß **Caracter√≠sticas:** HTML responsivo, rate limiting, validaci√≥n RFC
- ‚ö° **Seguridad:** C√≥digos aleatorios, expiraci√≥n configurable, logging completo
"""
}

@router_otp.post("/send_otp")
def enviar_codigo_otp(email: str, code: str, app_name: str):
    try:
        controller.Send_OTP(email, code, app_name)
    except Exception as e:
        raise HTTPException(status_code=status.HTTP_500_INTERNAL_SERVER_ERROR, detail=str(e))